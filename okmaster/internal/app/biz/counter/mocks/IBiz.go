// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	contextx "github.com/blackhorseya/ip-rate-limit/pkg/contextx"

	mock "github.com/stretchr/testify/mock"

	rate "golang.org/x/time/rate"
)

// IBiz is an autogenerated mock type for the IBiz type
type IBiz struct {
	mock.Mock
}

// Count provides a mock function with given fields: ctx, ip, limiter
func (_m *IBiz) Count(ctx contextx.Contextx, ip string, limiter *rate.Limiter) (int, error) {
	ret := _m.Called(ctx, ip, limiter)

	var r0 int
	if rf, ok := ret.Get(0).(func(contextx.Contextx, string, *rate.Limiter) int); ok {
		r0 = rf(ctx, ip, limiter)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(contextx.Contextx, string, *rate.Limiter) error); ok {
		r1 = rf(ctx, ip, limiter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
